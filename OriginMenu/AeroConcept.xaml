<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:OriginMenu"
                    xmlns:apictrl="clr-namespace:Start9.Api.Controls;assembly=Start9.Api"
                    xmlns:apiobj="clr-namespace:Start9.Api.Objects;assembly=Start9.Api"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    
    <LinearGradientBrush x:Key="AeroCircleButtonGlyphFillBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="White"/>
            <GradientStop Offset="1" Color="#FFCBD2D9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <DropShadowEffect x:Key="AeroCircleButtonGlyphShadowEffect" Color="Black" BlurRadius="2" Direction="0" ShadowDepth="0" Opacity="1"/>

    <VisualBrush x:Key="Start9LogoMaskBrush" TileMode="None" Viewport="0,0,1,1"
                                                 ViewportUnits="RelativeToBoundingBox"
                                                 Viewbox="0,0,144.00073,256.00027" ViewboxUnits="Absolute">
        <VisualBrush.Visual>
            <Canvas Name="svg8" Width="144.00073" Height="256.00027">
                <Canvas.RenderTransform>
                    <TranslateTransform X="0" Y="0" />
                </Canvas.RenderTransform>
                <Canvas.Resources />
                <!--Unknown tag: sodipodi:namedview-->
                <!--Unknown tag: metadata-->
                <Canvas Name="layer1">
                    <Canvas.RenderTransform>
                        <TranslateTransform X="-1.8930132e-5" Y="-40.999866" />
                    </Canvas.RenderTransform>
                    <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                                          Name="path4485" Fill="#FF000000" StrokeThickness="0.31324857"
                                                          Stroke="#FF000000" StrokeLineJoin="Miter"
                                                          StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                        <Path.Data>
                            <PathGeometry
                                                                Figures="M 0.38570981 108.65214 C 5.5479943 22.701762 116.12822 17.544525 141.23878 100.63075 52.19885 44.948872 33.173221 180.00833 143.83516 152.4612 142.17373 190.6451 119.6223 277.64656 13.367569 296.84602 51.063522 272.16844 77.598523 245.46586 78.925911 193.80218 c 0 0 -83.7024856 0.80034 -78.54020119 -85.15004 z"
                                                                FillRule="NonZero" />
                        </Path.Data>
                    </Path>
                </Canvas>
            </Canvas>
        </VisualBrush.Visual>
    </VisualBrush>

    <QuinticEase x:Key="StartGlowQuinticEase" EasingMode="EaseInOut"/>

    <Style x:Key="StartStyle" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <Grid Margin="0,10,10,0">
                            <Grid x:Name="HoverBackground" Background="#FF111111" Opacity="0"/>
                            <Grid x:Name="PressedBackground" Background="{x:Static SystemColors.ActiveBorderBrush}" Visibility="Hidden"/>
                            <Canvas x:Name="IdleEmblem" Background="White" Width="13.500054199161586821763898920888" Height="24" Margin="0.5,0,-0.5,0" OpacityMask="{StaticResource Start9LogoMaskBrush}">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Canvas.RenderTransform>
                                <Canvas.Effect>
                                    <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="0"
                                                      ShadowDepth="0" BlurRadius="1" Opacity="0.5" />
                                </Canvas.Effect>
                            </Canvas>
                            <Canvas x:Name="HoverEmblem" Width="13.500054199161586821763898920888" Height="24" Margin="0.5,0,-0.5,0" OpacityMask="{StaticResource Start9LogoMaskBrush}" Opacity="0">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Canvas.RenderTransform>
                                <Canvas.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop x:Name="LeftStop" Offset="1" Color="#FF0B9393"/>
                                            <GradientStop x:Name="GlowStop" Offset="1.5" Color="#FF61EEEE"/>
                                            <GradientStop x:Name="RightStop" Offset="2" Color="#FF0B9393"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Canvas.Background>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleEmblem" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleEmblem" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="HoverEmblem" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="LeftStop" Storyboard.TargetProperty="Offset" From="1" To="-2" Duration="0:0:1" BeginTime="0:0:0.25" EasingFunction="{StaticResource StartGlowQuinticEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="GlowStop" Storyboard.TargetProperty="Offset" From="1.5" To="-1.5" Duration="0:0:1" BeginTime="0:0:0.25" EasingFunction="{StaticResource StartGlowQuinticEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="RightStop" Storyboard.TargetProperty="Offset" From="2" To="-1" Duration="0:0:1" BeginTime="0:0:0.25" EasingFunction="{StaticResource StartGlowQuinticEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="HoverEmblem" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="LeftStop" Storyboard.TargetProperty="Offset" To="1" Duration="0:0:0"/>
                                        <DoubleAnimation Storyboard.TargetName="GlowStop" Storyboard.TargetProperty="Offset" To="1.5" Duration="0:0:0"/>
                                        <DoubleAnimation Storyboard.TargetName="RightStop" Storyboard.TargetProperty="Offset" To="2" Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PressedBackground" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="HoverEmblem" Property="Visibility" Value="Hidden"/>
                            <!--Setter TargetName="IdleEmblem" Property="Visibility" Value="Visible"/-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <QuinticEase x:Key="MenuAnimationEase" EasingMode="EaseOut"/>

    <Style x:Key="WindowStyle" TargetType="{x:Type local:MainWindow}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="161,40,0,80" />
        <Setter Property="Width" Value="434"/>
        <!--Width="520"-->
        <Setter Property="Height" Value="544"/>
        <!--Height="530"-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MainWindow}">
                    <Grid>
                        <Grid x:Name="RootGrid" Background="Transparent">
                            <Border BorderBrush="#C0000000" BorderThickness="1" CornerRadius="7,7,7,0" ClipToBounds="True">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#C0000000"/>
                                            <GradientStop Offset="1" Color="#F0000000"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid ClipToBounds="True">
                                    <Border HorizontalAlignment="Left" Width="30" CornerRadius="7,0,0,0">
                                        <Border.Background>
                                            <RadialGradientBrush GradientOrigin="0,0.5" Center="0,0.5" RadiusX="1" RadiusY="0.875">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.95" Color="#40FFFFFF"/>
                                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Border.Background>
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="Black"/>
                                                    <GradientStop Offset="1" Color="#C0000000"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                    </Border>
                                    <Canvas HorizontalAlignment="Left" Width="1">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#00FFFFFF"/>
                                                    <GradientStop Offset="0.1" Color="#7FFFFFFF"/>
                                                    <GradientStop Offset="0.9" Color="#7FFFFFFF"/>
                                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas VerticalAlignment="Top" Height="1">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#00FFFFFF"/>
                                                    <GradientStop Offset="0.1" Color="#7FFFFFFF"/>
                                                    <GradientStop Offset="0.9" Color="#7FFFFFFF"/>
                                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas HorizontalAlignment="Right" Width="1">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#00FFFFFF"/>
                                                    <GradientStop Offset="0.1" Color="#7FFFFFFF"/>
                                                    <GradientStop Offset="0.9" Color="#7FFFFFFF"/>
                                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas Height="200" VerticalAlignment="Center" RenderTransformOrigin="0.5,1" Margin="0,-150,0,150">
                                        <Canvas.Background>
                                            <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,1">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.49" Color="#00FFFFFF"/>
                                                    <GradientStop Offset="0.5" Color="#30FFFFFF"/>
                                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Canvas.Background>
                                        <Canvas.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="Black"/>
                                                    <GradientStop Offset="0.5" Color="Transparent"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Canvas.OpacityMask>
                                        <Canvas.RenderTransform>
                                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                                        </Canvas.RenderTransform>
                                    </Canvas>
                                    <Grid Margin="4">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition>
                                                <ColumnDefinition.Width>
                                                    <Binding Path="BorderThickness" ConverterParameter="Left">
                                                        <Binding.Converter>
                                                            <apiobj:ThicknessToDoubleConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ColumnDefinition.Width>
                                            </ColumnDefinition>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition>
                                                <RowDefinition.Height>
                                                    <Binding Path="BorderThickness" ConverterParameter="Top">
                                                        <Binding.Converter>
                                                            <apiobj:ThicknessToDoubleConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </RowDefinition.Height>
                                            </RowDefinition>
                                            <RowDefinition/>
                                            <RowDefinition>
                                                <RowDefinition.Height>
                                                    <Binding Path="BorderThickness" ConverterParameter="Bottom">
                                                        <Binding.Converter>
                                                            <apiobj:ThicknessToDoubleConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </RowDefinition.Height>
                                            </RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Border BorderThickness="1,0,0,0" CornerRadius="5" Margin="2" Grid.Column="1" Grid.RowSpan="3">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#00FFFFFF"/>
                                                        <GradientStop Offset="0.1" Color="#7FFFFFFF"/>
                                                        <GradientStop Offset="0.9" Color="#7FFFFFFF"/>
                                                        <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Border Background="White" BorderBrush="Black" BorderThickness="1" CornerRadius="5"/>
                                        </Border>
                                        <ContentControl x:Name="FirstContentControl" Content="{TemplateBinding Content}" Grid.ColumnSpan="2" Grid.RowSpan="3" Margin="0,0,0,0">
                                            <ContentControl.RenderTransform>
                                                <TranslateTransform x:Name="ContentTransform" Y="25"/>
                                            </ContentControl.RenderTransform>
                                        </ContentControl>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsManipulationEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Margin" To="0" Duration="0:0:0.25" EasingFunction="{StaticResource MenuAnimationEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="Y" To="0" Duration="0:0:0.125"/>
                                        <DoubleAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Margin" To="0,50,0,-50" Duration="0:0:0.25" EasingFunction="{StaticResource MenuAnimationEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="Y" To="25" Duration="0:0:0.375"/>
                                        <DoubleAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.375" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="PlacesListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource PlacesListViewItemStyle}"/>
    </Style>

    <Style x:Key="PlacesListViewItemStyle" TargetType="{x:Type apictrl:IconListViewItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type apictrl:IconListViewItem}">
                    <Grid>
                        <Grid x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Opacity="0">
                            <Border Background="#40FFFFFF">
                                <Border.OpacityMask>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="Transparent" />
                                            <GradientStop Offset="0.25" Color="White" />
                                            <GradientStop Offset="1" Color="Transparent" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                            </Border>
                            <Grid x:Name="ShineLine" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="10" Margin="0,-6">
                                <Grid.Background>
                                    <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#40FFFFFF" />
                                            <GradientStop Offset="1" Color="Transparent" />
                                        </RadialGradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Grid.Background>
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Center" Fill="#40FFFFFF" Height="1"/>
                            </Grid>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                            <!--Ellipse Width="32" Height="32" Stroke="LightGray" StrokeThickness="4">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush Center="0.5,0.75" GradientOrigin="0.5,0.25" RadiusX="1" RadiusY="1">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF35CEFA"/>
                                                <GradientStop Offset="1" Color="#FF044B8D"/>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse-->
                            <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="6,0" Focusable="False"/>
                            <ContentPresenter x:Name="ContentControl" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,0,6,0" Focusable="False"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.375"/>
                                        <ThicknessAnimation Storyboard.TargetName="ShineLine" Storyboard.TargetProperty="Margin" To="0,5" Duration="0:0:0.375"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.375"/>
                                        <ThicknessAnimation Storyboard.TargetName="ShineLine" Storyboard.TargetProperty="Margin" To="0,-6" Duration="0:0:0.375"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftColumnTopSeparator" TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Background" Value="#7FFFFFFF"/>
    </Style>

    <Style x:Key="LeftColumnMiddleSeparator" TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Background" Value="#7FFFFFFF"/>
    </Style>

    <QuinticEase x:Key="TileScalingEase" EasingMode="EaseOut"/>

    <Style x:Key="TileStyle" TargetType="{x:Type apictrl:IconButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type apictrl:IconButton}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="Scaler"/>
                        </Grid.RenderTransform>
                        <Rectangle x:Name="OuterGlowSize" Width="768"/>
                        <Rectangle x:Name="InnerGlowSize" Width="512"/>
                        <Border x:Name="BackBorder" Background="Black" BorderBrush="Black" BorderThickness="1" CornerRadius="3"/>
                        <Border x:Name="HoverBackground" CornerRadius="3" Visibility="Visible" Opacity="0" ClipToBounds="True">
                            <!--OpacityMask="{Binding OpacityMask, Source={x:Reference ShineGrid}}"-->
                            <Grid ClipToBounds="True">
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" Opacity="0.25"/>
                                <apictrl:Reveal HoverWidth="{Binding Width, Source={x:Reference InnerGlowSize}}" HoverHeight="{Binding Width, Source={x:Reference InnerGlowSize}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <apictrl:Reveal.Hover>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Grid Background="#01000000" Width="{Binding Width, Source={x:Reference InnerGlowSize}}" Height="{Binding Width, Source={x:Reference InnerGlowSize}}">
                                                    <Grid.Effect>
                                                        <BlurEffect Radius="64" KernelType="Gaussian"/>
                                                    </Grid.Effect>
                                                    <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{TemplateBinding Background}">
                                                        <Ellipse.OpacityMask>
                                                            <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                                                <RadialGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0.55" Color="Black"/>
                                                                    <GradientStop Offset="1" Color="#7F000000"/>
                                                                </RadialGradientBrush.GradientStops>
                                                            </RadialGradientBrush>
                                                        </Ellipse.OpacityMask>
                                                    </Ellipse>
                                                    <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                        <Ellipse.Fill>
                                                            <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                                                <RadialGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="White"/>
                                                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                                </RadialGradientBrush.GradientStops>
                                                            </RadialGradientBrush>
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                </Grid>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </apictrl:Reveal.Hover>
                                    <apictrl:Reveal.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Grid Background="#01000000" ClipToBounds="True">
                                                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="#C0000000" BorderBrush="Transparent" BorderThickness="5" CornerRadius="3" UseLayoutRounding="True">
                                                        <Border.Effect>
                                                            <BlurEffect Radius="5" KernelType="Gaussian"/>
                                                        </Border.Effect>
                                                    </Border>
                                                </Grid>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </apictrl:Reveal.OpacityMask>
                                </apictrl:Reveal>
                                <apictrl:Reveal HoverWidth="{Binding Width, Source={x:Reference OuterGlowSize}}" HoverHeight="{Binding Width, Source={x:Reference OuterGlowSize}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1">
                                    <apictrl:Reveal.Hover>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Grid Background="#01000000" Width="{Binding Width, Source={x:Reference OuterGlowSize}}" Height="{Binding Width, Source={x:Reference OuterGlowSize}}">
                                                    <Grid.Effect>
                                                        <BlurEffect Radius="128" KernelType="Gaussian"/>
                                                    </Grid.Effect>
                                                    <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{TemplateBinding Background}">
                                                        <Ellipse.OpacityMask>
                                                            <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                                                <RadialGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0.55" Color="Black"/>
                                                                    <GradientStop Offset="1" Color="#7F000000"/>
                                                                </RadialGradientBrush.GradientStops>
                                                            </RadialGradientBrush>
                                                        </Ellipse.OpacityMask>
                                                    </Ellipse>
                                                    <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                        <Ellipse.Fill>
                                                            <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                                                <RadialGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="White"/>
                                                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                                </RadialGradientBrush.GradientStops>
                                                            </RadialGradientBrush>
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                </Grid>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </apictrl:Reveal.Hover>
                                    <apictrl:Reveal.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Grid Background="#01000000" ClipToBounds="True">
                                                    <Border Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="Black" BorderThickness="25" UseLayoutRounding="True" Margin="-18">
                                                        <Border.Effect>
                                                            <BlurEffect Radius="25" KernelType="Gaussian"/>
                                                        </Border.Effect>
                                                    </Border>
                                                </Grid>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </apictrl:Reveal.OpacityMask>
                                </apictrl:Reveal>
                            </Grid>
                        </Border>
                        <Border BorderThickness="1">
                            <Grid x:Name="ContentRoot">
                                <!--Grid.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#40000000"/>
                                            <GradientStop Offset="1" Color="#20000000"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Grid.Background-->
                                <ContentControl x:Name="TitleControl" Content="{TemplateBinding Content}" Margin="16,8" Foreground="{TemplateBinding Foreground}" Focusable="False" IsTabStop="False" Opacity="1" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                <ContentControl x:Name="IconControl" Content="{TemplateBinding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="56" Height="56" Focusable="False" IsTabStop="False" />
                            </Grid>
                        </Border>
                        <Grid x:Name="ShineGrid" ClipToBounds="True">
                            <Grid.OpacityMask>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Border Width="{Binding ActualWidth, Source={x:Reference BackBorder}}" Height="{Binding ActualHeight, Source={x:Reference BackBorder}}" Background="Black" BorderBrush="Transparent" BorderThickness="1" CornerRadius="3"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Grid.OpacityMask>
                            <Grid.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Border Width="{Binding ActualWidth, Source={x:Reference BackBorder}}" Height="{Binding ActualHeight, Source={x:Reference BackBorder}}" CornerRadius="3">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#C0FFFFFF"/>
                                                        <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                                        <GradientStop Offset="0.75" Color="#00FFFFFF"/>
                                                        <GradientStop Offset="1" Color="#A0FFFFFF"/>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Grid ClipToBounds="True" UseLayoutRounding="True">
                                                <Grid.Effect>
                                                    <BlurEffect Radius="5" KernelType="Gaussian"/>
                                                </Grid.Effect>
                                                <Border BorderBrush="#C0FFFFFF" BorderThickness="3,1,3,0" CornerRadius="3" Margin="-1"/>
                                                <Canvas Width="10" HorizontalAlignment="Left" Margin="6,4">
                                                    <Canvas.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#00FFFFFF"/>
                                                                <GradientStop Offset="0.125" Color="#C0FFFFFF"/>
                                                                <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Canvas.Background>
                                                </Canvas>
                                            </Grid>
                                        </Border>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Grid.Background>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Visibility" Duration="0:0:0.01">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Visibility" Duration="0:0:0.26">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Hidden}" KeyTime="0:0:0.25"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/-->
                        </Trigger>
                        <!--Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Rotator" Storyboard.TargetProperty="RotationX" To="3.0625" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Rotator" Storyboard.TargetProperty="RotationX" To="0" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="Width" Value="64"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleX" To="0.975" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleY" To="0.975" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="Width" Value="128"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleX" To="0.975" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleY" To="0.975" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="Width" Value="256"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleX" To="0.9875" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleY" To="0.9875" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger-->
                        <Trigger Property="Height" Value="256">
                            <!--Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleX" To="0.975" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleY" To="0.975" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="Scaler" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource TileScalingEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions-->
                            <!--Setter TargetName="ScaleGrid" Property="RenderTransformOrigin" Value="0.5,0.75"/-->
                        </Trigger>
                        <Trigger Property="Width" Value="128">
                            <Setter TargetName="OuterGlowSize" Property="Width" Value="512"/>
                            <Setter TargetName="InnerGlowSize" Property="Width" Value="256"/>
                        </Trigger>
                        <Trigger Property="Width" Value="64">
                            <Setter TargetName="OuterGlowSize" Property="Width" Value="256"/>
                            <Setter TargetName="InnerGlowSize" Property="Width" Value="128"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentRoot" Property="Opacity" Value="0.75"/>
                        </Trigger>
                        <Trigger Property="VerticalContentAlignment" Value="Top">
                            <Setter TargetName="IconControl" Property="Width" Value="32"/>
                            <Setter TargetName="IconControl" Property="Height" Value="32"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallTileStyle" TargetType="{x:Type apictrl:IconButton}" BasedOn="{StaticResource TileStyle}">
        <Setter Property="Width" Value="64"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>

    <Style x:Key="MediumTileStyle" TargetType="{x:Type apictrl:IconButton}" BasedOn="{StaticResource TileStyle}">
        <Setter Property="Width" Value="128"/>
        <Setter Property="Height" Value="128"/>
    </Style>

    <Style x:Key="WideTileStyle" TargetType="{x:Type apictrl:IconButton}" BasedOn="{StaticResource TileStyle}">
        <Setter Property="Width" Value="256"/>
        <Setter Property="Height" Value="128"/>
    </Style>

    <Style x:Key="LargeTileStyle" TargetType="{x:Type apictrl:IconButton}" BasedOn="{StaticResource TileStyle}">
        <Setter Property="Width" Value="256"/>
        <Setter Property="Height" Value="256"/>
    </Style>

    <Style x:Key="TopButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <ContentControl x:Name="ContentControl" Content="{TemplateBinding Tag}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" Foreground="{TemplateBinding Foreground}"/>
                        <Border x:Name="HoverBackground" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" CornerRadius="6" BorderThickness="1" BorderBrush="#7F000000" Opacity="0">
                            <Grid>
                                <Grid Margin="1" ClipToBounds="True">
                                    <Ellipse x:Name="TopShine" VerticalAlignment="Top" Height="25" Margin="-100,-42">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#C0FFFFFF"/>
                                                    <GradientStop Offset="1" Color="#7FFFFFFF"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="BottomShine" VerticalAlignment="Bottom" Height="10" Margin="-50,-22">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#7FFFFFFF"/>
                                                    <GradientStop Offset="1" Color="#40FFFFFF"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                                <Border BorderThickness="1" BorderBrush="#C0FFFFFF" CornerRadius="5"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <ThicknessAnimation Storyboard.TargetName="TopShine" Storyboard.TargetProperty="Margin" To="-100,-2" Duration="0:0:0.125" />
                                        <ThicknessAnimation Storyboard.TargetName="BottomShine" Storyboard.TargetProperty="Margin" To="-50,-5" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.375" />
                                        <ThicknessAnimation Storyboard.TargetName="TopShine" Storyboard.TargetProperty="Margin" To="-100,-42" Duration="0:0:0.5" />
                                        <ThicknessAnimation Storyboard.TargetName="BottomShine" Storyboard.TargetProperty="Margin" To="-50,-22" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PowerButtonStyle" TargetType="Button" BasedOn="{StaticResource TopButtonStyle}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Tag">
            <Setter.Value>
                <Grid>
                    <Grid Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="1">
                        <Ellipse Fill="Black" Stroke="Transparent" StrokeThickness="0"/>
                        <Ellipse x:Name="IdleColoures" Fill="#FF4E7A93" Stroke="Transparent" StrokeThickness="0" OpacityMask="{DynamicResource ColouresMask}"/>
                        <Ellipse x:Name="HoverColoures" Fill="#FF459F45" Stroke="Transparent" StrokeThickness="0" OpacityMask="{DynamicResource ColouresMask}" Opacity="0"/>
                        <Ellipse x:Name="PressedBlack" Fill="Black" Stroke="Transparent" StrokeThickness="0" Opacity="0"/>
                        <Ellipse x:Name="PressedColoures" Fill="#FF318E31" Stroke="Transparent" StrokeThickness="0" OpacityMask="{DynamicResource ColouresMask}" Opacity="0"/>
                        <!--Element#E6838383-->
                        <Canvas>
                            <Canvas.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Grid>
                                            <Path Fill="#20FFFFFF" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Effect="{DynamicResource SmallBlur}">
                                                <Path.Data>
                                                    <PathGeometry Figures="m 1.3937872 7.3469123 c 0.4348524 0.07693 0.7082925 -0.802762 1.1339286 -0.685082 0.4210094 0.1164 0.2445148 0.924909 0.6142112 1.157552 0.6603451 0.4155419 1.5968907 0.3361719 2.3387278 0.09449 0.783441 -0.255232 1.989543 -0.713229 1.9371278 -1.535528 C 7.3838491 5.8459923 6.5673173 5.4312443 6.047619 5.5515253 5.4815735 5.6825333 5.5909374 6.7012643 5.1026784 7.0161833 4.7882273 7.2189983 4.3414233 7.3163723 3.9923735 7.1815473 3.5747728 7.0202433 3.1981347 6.5862413 3.141927 6.1421133 3.0972496 5.7890923 3.8245727 5.4417993 3.5907739 5.1735493 2.8657508 4.3416896 0.7496043 5.0873973 0.42522322 6.1421133 0.27374813 6.6346293 0.88638211 7.2571483 1.3937872 7.3469123 Z" FillRule="NonZero"/>
                                                </Path.Data>
                                            </Path>
                                            <Path Fill="#30FFFFFF" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Effect="{DynamicResource SmallBlur}">
                                                <Path.Data>
                                                    <PathGeometry Figures="M -1.4646577 2.0079984 C -1.5078659 3.2873041 1.052358 4.6273172 1.2284226 3.7325149 1.5253092 2.2236668 2.4391135 2.1312717 3.4962797 2.3151042 4.4257614 2.4767334 3.8266658 -0.42279726 2.9529389 -0.80319943 1.352628 -1.4999408 -1.4057407 0.26358661 -1.4646577 2.0079984 Z" FillRule="NonZero"/>
                                                </Path.Data>
                                            </Path>
                                            <Path Fill="#80FFFFFF" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Effect="{DynamicResource LargeBlur}">
                                                <Path.Data>
                                                    <PathGeometry Figures="M 2.4568453 5.0554313 C 2.0131802 4.6320654 1.2043506 5.7422424 0.66145831 5.4570313 0.19543946 5.212206 -0.16087251 4.465034 0.07087054 3.9923733 0.26181595 3.602923 0.93935391 3.8405335 1.3229166 3.6380209 2.2029133 3.1734021 2.6716351 2.0430508 3.6143973 1.7245163 4.1221834 1.5529488 4.7283071 1.5838758 5.220796 1.7953868 5.7836746 2.0371283 5.9980232 2.7926785 6.5437126 3.0710564 7.0638266 3.3363873 8.224443 2.7959236 8.2682292 3.3781622 8.308752 3.9170061 6.906891 3.3863594 6.7327008 3.8978793 6.5679591 4.3816531 7.5364228 4.6646347 7.5831473 5.173549 7.6379768 5.7707416 7.4529152 6.669037 6.8744418 6.8271948 6.2059747 7.0099574 5.8889056 5.5568666 5.1971727 5.5987722 4.5076314 5.640545 4.3332715 6.7768016 3.6852678 7.016183 3.1972485 7.196464 2.4516531 7.3511323 2.126116 6.9453125 1.7259421 6.4464493 2.9195248 5.4969416 2.4568453 5.0554313 Z" FillRule="NonZero"/>
                                                </Path.Data>
                                            </Path>
                                            <Path Fill="#00FFFFFF" StrokeMiterLimit="4" Effect="{DynamicResource LargeBlur}" Opacity="1">
                                                <Path.Data>
                                                    <PathGeometry Figures="M 6.1965725 5.147572 A 2.4299603 4.4179339 0 0 1 3.7666123 9.565506 2.4299603 4.4179339 0 0 1 1.336652 5.147572 2.4299603 4.4179339 0 0 1 3.7666123 0.7296381 2.4299603 4.4179339 0 0 1 6.1965725 5.147572 Z" FillRule="NonZero"/>
                                                </Path.Data>
                                                <Path.RenderTransform>
                                                    <MatrixTransform Matrix="0.39188028 -0.38933874 0.39188028 0.38933874 2.8206276 1.1045233"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Canvas.Background>
                            <Canvas.OpacityMask>
                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Offset="1" Color="White"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Canvas.OpacityMask>
                        </Canvas>
                        <Ellipse x:Name="Shine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Effect="{DynamicResource LargeBlur}">
                            <Ellipse.Fill>
                                <RadialGradientBrush Center="0.75,0.25" GradientOrigin="2,-1" RadiusX="0.3125" RadiusY="0.3125">
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Offset="1" Color="White"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                            <Ellipse.OpacityMask>
                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#C0000000"/>
                                        <GradientStop Offset="0.875" Color="White"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.OpacityMask>
                        </Ellipse>
                    </Grid>
                    <Grid Width="11" Height="12" UseLayoutRounding="True" Background="{DynamicResource AeroCircleButtonGlyphFillBrush}" Effect="{DynamicResource AeroCircleButtonGlyphShadowEffect}">
                        <Grid.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Grid Width="11" Height="12" UseLayoutRounding="True">
                                        <Rectangle Fill="White" Stroke="Transparent" StrokeThickness="0" Width="1" HorizontalAlignment="Center" VerticalAlignment="Top" Height="5"/>
                                        <Ellipse Fill="Transparent" Stroke="White" StrokeThickness="2" Height="11" VerticalAlignment="Bottom">
                                            <Ellipse.OpacityMask>
                                                <RadialGradientBrush Center="0.5,0" GradientOrigin="0.5,0">
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.46875" Color="Transparent"/>
                                                        <GradientStop Offset="0.46875" Color="Black"/>
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </Ellipse.OpacityMask>
                                        </Ellipse>
                                    </Grid>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Grid.OpacityMask>
                    </Grid>
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UserButtonStyle" TargetType="Button" BasedOn="{StaticResource TopButtonStyle}">
        <Setter Property="Margin" Value="6,0,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Tag">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <Rectangle x:Name="UserAvatar" Width="26" Height="26" Stroke="Transparent" StrokeThickness="0">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0.25,0" EndPoint="0.75,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="Red"/>
                                    <GradientStop Offset="1" Color="Green"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="{x:Static sys:Environment.UserName}" Foreground="White" FontSize="18" FontFamily="Segoe UI" TextAlignment="Left" VerticalAlignment="Center" Margin="3,0"/>
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PinnedTilesItemsControlStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="Margin" Value="4,3,7,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  Background="{TemplateBinding Background}"  Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="Scroller" CanContentScroll="True" 
                                              HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Hidden">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Scroller" Property="VerticalScrollBarVisibility" Value="Auto"/>
                            <Setter TargetName="Scroller" Property="Padding" Value="0,0,-17,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AllAppsToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="#FF4E7A93" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Height" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <Grid>
                            <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="1">
                                        <Ellipse Fill="Black" Stroke="Transparent" StrokeThickness="0"/>
                                        <Ellipse x:Name="IdleColoures" Fill="{TemplateBinding Background}" Stroke="Transparent" StrokeThickness="0" OpacityMask="{DynamicResource ColouresMask}"/>
                                        <Ellipse x:Name="HoverColoures" Fill="#FF459F45" Stroke="Transparent" StrokeThickness="0" OpacityMask="{DynamicResource ColouresMask}" Opacity="0"/>
                                        <Ellipse x:Name="PressedBlack" Fill="Black" Stroke="Transparent" StrokeThickness="0" Opacity="0"/>
                                        <Ellipse x:Name="PressedColoures" Fill="#FF318E31" Stroke="Transparent" StrokeThickness="0" OpacityMask="{DynamicResource ColouresMask}" Opacity="0"/>
                                        <!--Element#E6838383-->
                                        <Canvas>
                                            <Canvas.Background>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Grid>
                                                            <Path Fill="#20FFFFFF" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Effect="{DynamicResource SmallBlur}">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="m 1.3937872 7.3469123 c 0.4348524 0.07693 0.7082925 -0.802762 1.1339286 -0.685082 0.4210094 0.1164 0.2445148 0.924909 0.6142112 1.157552 0.6603451 0.4155419 1.5968907 0.3361719 2.3387278 0.09449 0.783441 -0.255232 1.989543 -0.713229 1.9371278 -1.535528 C 7.3838491 5.8459923 6.5673173 5.4312443 6.047619 5.5515253 5.4815735 5.6825333 5.5909374 6.7012643 5.1026784 7.0161833 4.7882273 7.2189983 4.3414233 7.3163723 3.9923735 7.1815473 3.5747728 7.0202433 3.1981347 6.5862413 3.141927 6.1421133 3.0972496 5.7890923 3.8245727 5.4417993 3.5907739 5.1735493 2.8657508 4.3416896 0.7496043 5.0873973 0.42522322 6.1421133 0.27374813 6.6346293 0.88638211 7.2571483 1.3937872 7.3469123 Z" FillRule="NonZero"/>
                                                                </Path.Data>
                                                            </Path>
                                                            <Path Fill="#30FFFFFF" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Effect="{DynamicResource SmallBlur}">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M -1.4646577 2.0079984 C -1.5078659 3.2873041 1.052358 4.6273172 1.2284226 3.7325149 1.5253092 2.2236668 2.4391135 2.1312717 3.4962797 2.3151042 4.4257614 2.4767334 3.8266658 -0.42279726 2.9529389 -0.80319943 1.352628 -1.4999408 -1.4057407 0.26358661 -1.4646577 2.0079984 Z" FillRule="NonZero"/>
                                                                </Path.Data>
                                                            </Path>
                                                            <Path Fill="#80FFFFFF" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Effect="{DynamicResource LargeBlur}">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M 2.4568453 5.0554313 C 2.0131802 4.6320654 1.2043506 5.7422424 0.66145831 5.4570313 0.19543946 5.212206 -0.16087251 4.465034 0.07087054 3.9923733 0.26181595 3.602923 0.93935391 3.8405335 1.3229166 3.6380209 2.2029133 3.1734021 2.6716351 2.0430508 3.6143973 1.7245163 4.1221834 1.5529488 4.7283071 1.5838758 5.220796 1.7953868 5.7836746 2.0371283 5.9980232 2.7926785 6.5437126 3.0710564 7.0638266 3.3363873 8.224443 2.7959236 8.2682292 3.3781622 8.308752 3.9170061 6.906891 3.3863594 6.7327008 3.8978793 6.5679591 4.3816531 7.5364228 4.6646347 7.5831473 5.173549 7.6379768 5.7707416 7.4529152 6.669037 6.8744418 6.8271948 6.2059747 7.0099574 5.8889056 5.5568666 5.1971727 5.5987722 4.5076314 5.640545 4.3332715 6.7768016 3.6852678 7.016183 3.1972485 7.196464 2.4516531 7.3511323 2.126116 6.9453125 1.7259421 6.4464493 2.9195248 5.4969416 2.4568453 5.0554313 Z" FillRule="NonZero"/>
                                                                </Path.Data>
                                                            </Path>
                                                            <Path Fill="#00FFFFFF" StrokeMiterLimit="4" Effect="{DynamicResource LargeBlur}" Opacity="1">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M 6.1965725 5.147572 A 2.4299603 4.4179339 0 0 1 3.7666123 9.565506 2.4299603 4.4179339 0 0 1 1.336652 5.147572 2.4299603 4.4179339 0 0 1 3.7666123 0.7296381 2.4299603 4.4179339 0 0 1 6.1965725 5.147572 Z" FillRule="NonZero"/>
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <MatrixTransform Matrix="0.39188028 -0.38933874 0.39188028 0.38933874 2.8206276 1.1045233"/>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Grid>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Canvas.Background>
                                            <Canvas.OpacityMask>
                                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStop Offset="1" Color="White"/>
                                                        <GradientStop Offset="1" Color="Transparent"/>
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </Canvas.OpacityMask>
                                        </Canvas>
                                        <Ellipse x:Name="Shine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Effect="{DynamicResource LargeBlur}">
                                            <Ellipse.Fill>
                                                <RadialGradientBrush Center="0.75,0.25" GradientOrigin="2,-1" RadiusX="0.3125" RadiusY="0.3125">
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStop Offset="1" Color="White"/>
                                                        <GradientStop Offset="1" Color="Transparent"/>
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </Ellipse.Fill>
                                            <Ellipse.OpacityMask>
                                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#C0000000"/>
                                                        <GradientStop Offset="0.875" Color="White"/>
                                                        <GradientStop Offset="1" Color="Transparent"/>
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </Ellipse.OpacityMask>
                                        </Ellipse>
                                    </Grid>
                                    <Grid Margin="{TemplateBinding Padding}" Effect="{DynamicResource AeroCircleButtonGlyphShadowEffect}" RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform X="-2.6397072" Y="-3.08512825"/>
                                                <ScaleTransform ScaleX="1.125" ScaleY="1.125"/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Path x:Name="AllAppsArrow" Data="m 16.532162 10.699497 v -0.03752 L 12.237363 6.1702565 H 9.1241024 L 12.396777 9.5179493 H 5.2794144 v 2.3255677 h 7.1173626 l -3.2726746 3.347692 h 3.1132606 z" VerticalAlignment="Center" Margin="10,0" Opacity="1" Fill="{DynamicResource AeroCircleButtonGlyphFillBrush}"/>
                                        <Path x:Name="BackArrow" Data="m 5.2794144 10.699497 v -0.03752 L 9.5742134 6.1702565 H 12.687474 L 9.4147994 9.5179493 H 16.532162 V 11.843517 H 9.4147994 l 3.2726746 3.347692 H 9.5742134 Z" VerticalAlignment="Center" Margin="10,0" Opacity="0" Fill="{DynamicResource AeroCircleButtonGlyphFillBrush}"/>
                                    </Grid>
                                </Grid>
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="-4,0,6,0">
                                    <ContentControl x:Name="AllAppsControl" Content="All Apps" Focusable="False" IsTabStop="False" Opacity="1" Foreground="White"/>
                                    <ContentControl x:Name="BackControl" Content="Bacc" Focusable="False" IsTabStop="False" Opacity="0" Foreground="White"/>
                                </Grid>
                            </StackPanel>
                        </Grid>
                        <Border x:Name="HoverBackground" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" CornerRadius="6" BorderThickness="1" BorderBrush="#7F000000" Opacity="0">
                            <Grid>
                                <Grid Margin="1" ClipToBounds="True">
                                    <Ellipse x:Name="TopShine" VerticalAlignment="Top" Height="25" Margin="-100,-42">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#C0FFFFFF"/>
                                                    <GradientStop Offset="1" Color="#7FFFFFFF"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="BottomShine" VerticalAlignment="Bottom" Height="10" Margin="-50,-22">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#7FFFFFFF"/>
                                                    <GradientStop Offset="1" Color="#40FFFFFF"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                                <Border BorderThickness="1" BorderBrush="#C0FFFFFF" CornerRadius="5"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <ThicknessAnimation Storyboard.TargetName="TopShine" Storyboard.TargetProperty="Margin" To="-100,-10" Duration="0:0:0.125" />
                                        <ThicknessAnimation Storyboard.TargetName="BottomShine" Storyboard.TargetProperty="Margin" To="-50,-5" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="HoverColoures" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.375" />
                                        <ThicknessAnimation Storyboard.TargetName="TopShine" Storyboard.TargetProperty="Margin" To="-100,-42" Duration="0:0:0.5" />
                                        <ThicknessAnimation Storyboard.TargetName="BottomShine" Storyboard.TargetProperty="Margin" To="-50,-22" Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetName="HoverColoures" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBlack"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedColoures"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBlack"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedColoures"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="AllAppsControl" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="BackControl" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="AllAppsArrow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="BackArrow" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="AllAppsControl" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="BackControl" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="AllAppsArrow" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="BackArrow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PowerMenuStyle" TargetType="{x:Type apictrl:TouchableContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0,5,0,5"/>
        <Setter Property="HasDropShadow" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type apictrl:TouchableContextMenu}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Height" Value="40" />
                            <Setter Property="Background" Value="#01000000" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="FontFamily" Value="Segoe UI Semibold" />
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="15" />
                            <Setter Property="FontStyle" Value="Normal" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="BorderBrush" Value="#01000000" />
                            <Setter Property="Padding" Value="21,15,21,15" />
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Style.Resources>
                                <ControlTemplate x:Key="ImmersiveTopLevelItemTemplate" TargetType="MenuItem">
                                    <Border Name="Border" Padding="20,0,27,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <ContentPresenter Name="Content" Margin="0" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#FFDEDEDE"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#FF4617B5"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                                <ControlTemplate x:Key="ImmersiveTopLevelHeaderTemplate" TargetType="MenuItem">
                                    <Border Name="Border" Padding="20,0,27,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                                        <Grid>
                                            <ContentPresenter Margin="0" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                                            <Path Margin="-7" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 2 0 L 5 3 L 2 6 L 0 6 L 3 3 Z" Fill="{TemplateBinding Foreground}" />
                                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                                <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="White" BorderBrush="#FF2A2A2A" BorderThickness="2" Padding="0,5,0,5">
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                </Border>
                                            </Popup>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#FFDEDEDE"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#FF4617B5"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="Template" Value="{StaticResource ImmersiveTopLevelHeaderTemplate}"/>
                                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                                </Trigger>
                                <Trigger Property="Role" Value="TopLevelItem">
                                    <Setter Property="Template" Value="{StaticResource ImmersiveTopLevelItemTemplate}"/>
                                </Trigger>
                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter Property="Template" Value="{StaticResource ImmersiveTopLevelHeaderTemplate}"/>
                                </Trigger>
                                <Trigger Property="Role" Value="SubmenuItem">
                                    <Setter Property="Template" Value="{StaticResource ImmersiveTopLevelItemTemplate}"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background" Value="#FFDEDEDE"/>
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#FF4617B5"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderThickness" Value="0" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="Border" Background="White" BorderBrush="#FF2A2A2A" BorderThickness="2" CornerRadius="0" Padding="0,5,0,5">
                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UserMenuStyle" TargetType="{x:Type apictrl:TouchableContextMenu}" BasedOn="{StaticResource PowerMenuStyle}">
        <Setter Property="Width" Value="278"/>
    </Style>

    <Style x:Key="SearchBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="#C0000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid ClipToBounds="True">
                        <Border x:Name="IdleBackground" CornerRadius="6" BorderThickness="1" Padding="0" BorderBrush="Black">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#A0FFFFFF"/>
                                        <GradientStop Offset="1" Color="#C0FFFFFF"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border BorderThickness="1" BorderBrush="#C0FFFFFF" CornerRadius="5"/>
                        </Border>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>